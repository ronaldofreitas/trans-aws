import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { CreateLanguageModelRequest, CreateLanguageModelResponse } from "../models/models_0";
import { ServiceInputTypes, ServiceOutputTypes, TranscribeClientResolvedConfig } from "../TranscribeClient";
export interface CreateLanguageModelCommandInput extends CreateLanguageModelRequest {
}
export interface CreateLanguageModelCommandOutput extends CreateLanguageModelResponse, __MetadataBearer {
}
/**
 * <p>Creates a new custom language model. Use Amazon S3 prefixes to provide the location of your input files. The time it
 *             takes to create your model depends on the size of your training data.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { TranscribeClient, CreateLanguageModelCommand } from "@aws-sdk/client-transcribe"; // ES Modules import
 * // const { TranscribeClient, CreateLanguageModelCommand } = require("@aws-sdk/client-transcribe"); // CommonJS import
 * const client = new TranscribeClient(config);
 * const command = new CreateLanguageModelCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link CreateLanguageModelCommandInput} for command's `input` shape.
 * @see {@link CreateLanguageModelCommandOutput} for command's `response` shape.
 * @see {@link TranscribeClientResolvedConfig | config} for command's `input` shape.
 *
 */
export declare class CreateLanguageModelCommand extends $Command<CreateLanguageModelCommandInput, CreateLanguageModelCommandOutput, TranscribeClientResolvedConfig> {
    readonly input: CreateLanguageModelCommandInput;
    constructor(input: CreateLanguageModelCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: TranscribeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateLanguageModelCommandInput, CreateLanguageModelCommandOutput>;
    private serialize;
    private deserialize;
}
