import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { StartCallAnalyticsJobRequest, StartCallAnalyticsJobResponse } from "../models/models_0";
import { ServiceInputTypes, ServiceOutputTypes, TranscribeClientResolvedConfig } from "../TranscribeClient";
export interface StartCallAnalyticsJobCommandInput extends StartCallAnalyticsJobRequest {
}
export interface StartCallAnalyticsJobCommandOutput extends StartCallAnalyticsJobResponse, __MetadataBearer {
}
/**
 * <p>Starts an asynchronous analytics job that not only transcribes the audio recording of a caller and agent, but
 *             also returns additional insights. These insights include how quickly or loudly the caller or agent was speaking. To
 *             retrieve additional insights with your analytics jobs, create categories. A category is a way to classify analytics jobs
 *             based on attributes, such as a customer's sentiment or a particular phrase being used during the call. For more
 *             information, see the  operation. </p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { TranscribeClient, StartCallAnalyticsJobCommand } from "@aws-sdk/client-transcribe"; // ES Modules import
 * // const { TranscribeClient, StartCallAnalyticsJobCommand } = require("@aws-sdk/client-transcribe"); // CommonJS import
 * const client = new TranscribeClient(config);
 * const command = new StartCallAnalyticsJobCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link StartCallAnalyticsJobCommandInput} for command's `input` shape.
 * @see {@link StartCallAnalyticsJobCommandOutput} for command's `response` shape.
 * @see {@link TranscribeClientResolvedConfig | config} for command's `input` shape.
 *
 */
export declare class StartCallAnalyticsJobCommand extends $Command<StartCallAnalyticsJobCommandInput, StartCallAnalyticsJobCommandOutput, TranscribeClientResolvedConfig> {
    readonly input: StartCallAnalyticsJobCommandInput;
    constructor(input: StartCallAnalyticsJobCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: TranscribeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartCallAnalyticsJobCommandInput, StartCallAnalyticsJobCommandOutput>;
    private serialize;
    private deserialize;
}
